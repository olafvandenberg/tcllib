[comment {-*- tcl -*- doctools manpage}]
[manpage_begin dicttool n %verstion%]
[keywords dict]
[copyright {2018 Sean Woods <yoda@etoyoc.com>}]
[moddesc   {Extensions to the standard "dict" command}]
[category Utilities]
[titledesc {Dictionary Tools}]
[require Tcl 8.5]
[description]
[para]
The [package dicttool] package enhances the standard [emph dict] command with several new
commands. In addition, the package also defines several "creature comfort" list commands as well.
Each command checks to see if a command already exists of the same name before adding itself,
just in case any of these slip into the core.

[section {Commands}]
[list_begin definitions]
[call proc [cmd PROC] [arg name] [arg arglist] [arg body] [opt "[arg ninja] [const ""]"]]

 Because many features in this package may be added as
 commands to future tcl cores, or be provided in binary
 form by packages, I need a declaritive way of saying
 [emph {Create this command if there isn't one already}].
 The [emph ninja] argument is a script to execute if the
 command is created by this mechanism.




[call proc [cmd dicttool::_dictputb] [arg level] [arg varname] [arg dict]]

 Helper function for ::tcl::dict::print
 Formats the string representation for a dictionary element within
 a human readable stream of lines, and determines if it needs to call itself
 with further indentation to express a sub-branch




[call proc [cmd dicttool::_sanitizeb] [arg path] [arg varname] [arg dict]]

 Helper function for ::tcl::dict::print
 Formats the string representation for a dictionary element within
 a human readable stream of lines, and determines if it needs to call itself
 with further indentation to express a sub-branch




[call proc [cmd dicttool::canonical] [arg rawpath]]


[call proc [cmd dicttool::storage] [arg rawpath]]


[call proc [cmd dicttool::dictset] [arg varname] [opt "[arg args]"]]


[call proc [cmd dicttool::dictmerge] [arg varname] [opt "[arg args]"]]

 A recursive form of dict merge, intended for modifying variables in place.

[para]Example: [example { > set mydict {sub/ {sub/ {description {a block of text}}}}
 > ::dicttool::dictmerge mydict {sub/ {sub/ {field {another block of text}}}}]
 > dicttool::print $mydict
 sub/ {
   sub/ {
     description {a block of text}
     field {another block of text}
   }
 }


}]

[list_end]

[section AUTHORS]
Sean Woods [uri mailto:<yoda@etoyoc.com>][para]
[vset CATEGORY dict]
[include ../doctools2base/include/feedback.inc]
[manpage_end]

[manpage_end]

