'\"
'\" Generated from file 'mime\&.man' by tcllib/doctools with format 'nroff'
'\" Copyright (c) 1999-2000 Marshall T\&. Rose
'\"
.TH "mime" n 1\&.6 tcllib "Mime"
.\" The -*- nroff -*- definitions below are for supplemental macros used
.\" in Tcl/Tk manual entries.
.\"
.\" .AP type name in/out ?indent?
.\"	Start paragraph describing an argument to a library procedure.
.\"	type is type of argument (int, etc.), in/out is either "in", "out",
.\"	or "in/out" to describe whether procedure reads or modifies arg,
.\"	and indent is equivalent to second arg of .IP (shouldn't ever be
.\"	needed;  use .AS below instead)
.\"
.\" .AS ?type? ?name?
.\"	Give maximum sizes of arguments for setting tab stops.  Type and
.\"	name are examples of largest possible arguments that will be passed
.\"	to .AP later.  If args are omitted, default tab stops are used.
.\"
.\" .BS
.\"	Start box enclosure.  From here until next .BE, everything will be
.\"	enclosed in one large box.
.\"
.\" .BE
.\"	End of box enclosure.
.\"
.\" .CS
.\"	Begin code excerpt.
.\"
.\" .CE
.\"	End code excerpt.
.\"
.\" .VS ?version? ?br?
.\"	Begin vertical sidebar, for use in marking newly-changed parts
.\"	of man pages.  The first argument is ignored and used for recording
.\"	the version when the .VS was added, so that the sidebars can be
.\"	found and removed when they reach a certain age.  If another argument
.\"	is present, then a line break is forced before starting the sidebar.
.\"
.\" .VE
.\"	End of vertical sidebar.
.\"
.\" .DS
.\"	Begin an indented unfilled display.
.\"
.\" .DE
.\"	End of indented unfilled display.
.\"
.\" .SO ?manpage?
.\"	Start of list of standard options for a Tk widget. The manpage
.\"	argument defines where to look up the standard options; if
.\"	omitted, defaults to "options". The options follow on successive
.\"	lines, in three columns separated by tabs.
.\"
.\" .SE
.\"	End of list of standard options for a Tk widget.
.\"
.\" .OP cmdName dbName dbClass
.\"	Start of description of a specific option.  cmdName gives the
.\"	option's name as specified in the class command, dbName gives
.\"	the option's name in the option database, and dbClass gives
.\"	the option's class in the option database.
.\"
.\" .UL arg1 arg2
.\"	Print arg1 underlined, then print arg2 normally.
.\"
.\" .QW arg1 ?arg2?
.\"	Print arg1 in quotes, then arg2 normally (for trailing punctuation).
.\"
.\" .PQ arg1 ?arg2?
.\"	Print an open parenthesis, arg1 in quotes, then arg2 normally
.\"	(for trailing punctuation) and then a closing parenthesis.
.\"
.\"	# Set up traps and other miscellaneous stuff for Tcl/Tk man pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
.\"	# Start an argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1 \\fI\\$2\\fP (\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
.\"	# define tabbing values for .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
.\"	# BS - start boxed text
.\"	# ^y = starting y location
.\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
.\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally, but don't draw top of
.\"	box if the box started on an earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
.\"	# VS - start vertical sidebar
.\"	# ^Y = starting y location
.\"	# ^v = 1 (for troff;  for nroff this doesn't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
.\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
.\"	# Special macro to handle page bottom:  finish off current
.\"	# box/sidebar if in box/sidebar mode, then invoked standard
.\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if this is the box's first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
.\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
.\"	# DE - end display
.de DE
.fi
.RE
.sp
..
.\"	# SO - start of list of standard options
.de SO
'ie '\\$1'' .ds So \\fBoptions\\fR
'el .ds So \\fB\\$1\\fR
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
.\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See the \\*(So manual entry for details on the standard options.
..
.\"	# OP - start of full description for a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
.\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
.\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.\"	# UL - underline word
.de UL
\\$1\l'|0\(ul'\\$2
..
.\"	# QW - apply quotation marks to word
.de QW
.ie '\\*(lq'"' ``\\$1''\\$2
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\$2
..
.\"	# PQ - apply parens and quotation marks to word
.de PQ
.ie '\\*(lq'"' (``\\$1''\\$2)\\$3
.\"" fix emacs highlighting
.el (\\*(lq\\$1\\*(rq\\$2)\\$3
..
.\"	# QR - quoted range
.de QR
.ie '\\*(lq'"' ``\\$1''\\-``\\$2''\\$3
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\-\\*(lq\\$2\\*(rq\\$3
..
.\"	# MT - "empty" string
.de MT
.QW ""
..
.BS
.SH NAME
mime \- Manipulation of Internet messages
.SH SYNOPSIS
package require \fBTcl  8\&.5\fR
.sp
package require \fBmime  ?1\&.6?\fR
.sp
\fB::mime::initialize\fR ?\fB-canonical\fR \fItype/subtype\fR? ?\fB-params\fR \fIdictionary\fR? ?\fB-encoding\fR \fIvalue\fR? ?\fB-headers\fR \fIdictionary\fR? ?(\fB-chan\fR \fIname\fR | \fB-file\fR \fIname\fR | \fB-string\fR \fIvalue\fR | \fB-parts\fR \fIparts\fR)?
.sp
\fB::mime::body\fR \fItoken\fR ?\fB-decode\fR? ?\fB-blocksize\fR \fIoctets\fR?"
.sp
\fB::mime::datetime\fR (\fItime\fR | \fB-now\fR) \fIproperty\fR
.sp
\fB::mime::finalize\fR \fItoken\fR ?\fB-subordinates\fR \fBall\fR | \fBdynamic\fR | \fBnone\fR?
.sp
\fB::mime::header\fR \fBserialize\fR \fIvalue\fR \fIparameters\fR
.sp
\fB::mime::header\fR \fBget\fR \fItoken\fR ?\fIkey\fR | \fB-names\fR?
.sp
\fB::mime::header\fR \fBset\fR \fItoken\fR \fIname value\fR ?\fIparameters\fR ?\fB-mode\fR \fBwrite\fR | \fBappend\fR | \fBdelete\fR??
.sp
\fB::mime::property\fR \fItoken\fR ?\fIname\fR | \fB-names\fR?
.sp
\fB::mime::serialize\fR \fItoken\fR ?\fB-chan\fR \fIchannel\fR?
.sp
\fB::mime::parseaddress\fR \fIaddresses\fR
.sp
\fB::mime::mapencoding\fR \fIencoding_name\fR
.sp
\fB::mime::reversemapencoding\fR \fIcharset_type\fR
.sp
.BE
.SH DESCRIPTION
.PP
Provides commands to create and manipulate Internet messages\&.
.TP
\fB::mime::initialize\fR ?\fB-canonical\fR \fItype/subtype\fR? ?\fB-params\fR \fIdictionary\fR? ?\fB-encoding\fR \fIvalue\fR? ?\fB-headers\fR \fIdictionary\fR? ?(\fB-chan\fR \fIname\fR | \fB-file\fR \fIname\fR | \fB-string\fR \fIvalue\fR | \fB-parts\fR \fIparts\fR)?
Parses a message and returns a token for the message\&.  One of \fB-chan\fR, \fB-file\fR, or \fB-string\fR must be provided as the source of the input\&.  If \fB-canonical\fR is provided the input is the body only and is already formatted according to
the provided \fItype/subtype\fR, and therefore should not be parsed\&.  If \fIparts\fR is provided it is a list of tokens for messages that comprise a \fBmultipart/mixed\fR message body\&.  \fB-params\fR is a multidict (a dictionary where the keys may not be unique)
of parameters for the \fBContent-Type\fR header\&.  \fB-headers\fR is a multidict of headers\&.
.sp
\fB-encoding\fR sets the \fBContent-Transfer-Encoding\fR\&.
.TP
\fB::mime::body\fR \fItoken\fR ?\fB-decode\fR? ?\fB-blocksize\fR \fIoctets\fR?"
Returns as a string in canonical form the body of the message corresponding to
\fItoken\fR\&.
.sp
If \fB-blocksize\fR is provided, returns a command that itself returns up to
the next \fIoctets\fR of the message each time it's called, and returns a code
of \fBbreak\fR when finished, deleting itself as well\&.  If \fIoctets\fR is
the empty string, a default value is used\&.  Pauses the current coroutine as
needed to wait for input\&.
.sp
\fB-decode\fR converts the message body from the character set it is encoded
in\&.
.TP
\fB::mime::datetime\fR (\fItime\fR | \fB-now\fR) \fIproperty\fR
Returns the \fIproperty\fR of \fItime\fR, which 822-style date-time value\&.
.sp
Available properties and their ranges are:
.RS
.TP
\fBhour\fR
0 \&.\&. 23
.TP
\fBlmonth\fR
January, February, \&.\&.\&., December
.TP
\fBlweekday\fR
Sunday, Monday, \&.\&.\&. Saturday
.TP
\fBmday\fR
1 \&.\&. 31
.TP
\fBmin\fR
0 \&.\&. 59
.TP
\fBmon\fR
1 \&.\&. 12
.TP
\fBmonth\fR
Jan, Feb, \&.\&.\&., Dec
.TP
\fBproper\fR
822-style date-time specification
.TP
\fBrclock\fR
elapsed seconds between then and now
.TP
\fBsec\fR
0 \&.\&. 59
.TP
\fBwday\fR
0 \&.\&. 6 (Sun \&.\&. Mon)
.TP
\fBweekday\fR
Sun, Mon, \&.\&.\&., Sat
.TP
\fByday\fR
1 \&.\&. 366
.TP
\fByear\fR
1900 \&.\&.\&.
.TP
\fBzone\fR
-720 \&.\&. 720 (minutes east of GMT)
.RE
.TP
\fB::mime::finalize\fR \fItoken\fR ?\fB-subordinates\fR \fBall\fR | \fBdynamic\fR | \fBnone\fR?
Destroys the message corresponding to \fItoken\fR and
returns the empty string\&.
.sp
\fB-subordinates\fR specifies which messages
comprising the body should also be destroyed\&.  The default value is
\fBdynamic\fR, which destroys all component messages that were created by
\fB::mime::initialize\fR\&.
.TP
\fB::mime::header\fR \fBserialize\fR \fIvalue\fR \fIparameters\fR
Serialize a header\&.
.TP
\fB::mime::header\fR \fBget\fR \fItoken\fR ?\fIkey\fR | \fB-names\fR?
Returns the header of a message as a multidict
where each value is a list containing the header value and any parameters for
that value\&.
.sp
If \fIname\fR is provided returns a list of values for that name, without
regard to case\&.
.sp
If \fB-names\fR is provided, returns a list of all header names\&.
.TP
\fB::mime::header\fR \fBset\fR \fItoken\fR \fIname value\fR ?\fIparameters\fR ?\fB-mode\fR \fBwrite\fR | \fBappend\fR | \fBdelete\fR??
If \fBappend\fR is provided, creates a new header named \fIname\fR with the
value of \fIvalue\fR is added\&.
If \fBwrite\fR is provided, deletes any existing headers whose names match
\fIkey\fR and then creates a new header named \fIkey\fR with the value of
\fIvalue\fR\&.
If \fBdelete\fR is provided, deletes any existing header having a name that matches
\fIkey\fR\&.
\fIparameters\fR is a dictionary of parameters for the header\&.
Returns a list of strings containing the previous value associated with the
key\&.
.sp
The value for \fB-mode\fR is one of:
.RS
.TP
\fBwrite\fR
The \fIkey\fR/\fIvalue\fR is either created or overwritten (the default)\&.
.TP
\fBappend\fR
Appends a new \fIkey\fR/\fIvalue\fR\&.
.TP
\fBdelete\fR
Removes all values associated with the key\&.  \fIvalue\fR is ignored\&.
.RE
.TP
\fB::mime::property\fR \fItoken\fR ?\fIname\fR | \fB-names\fR?
Returns a dictionary of message properties\&.  If \fIname\fR is provided, only
the corresponding value is returned\&.  If \fB-names\fR is provided, a list
of all property names is returned\&.
.sp
properties:
.RS
.TP
\fBcontent\fR
The type/subtype of the content
.TP
\fBencoding\fR
The "Content-Transfer-Encoding"
.TP
\fBparams\fR
A list of "Content-Type" parameters
.TP
\fBparts\fR
A list of tokens for messages that should comprise a multipart body\&.  Only exists if
there are any such messages\&.
.TP
\fBsize\fR
The approximate size of the unencoded content\&.
.RE
.TP
\fB::mime::serialize\fR \fItoken\fR ?\fB-chan\fR \fIchannel\fR?
Return the serialization of the message corresponding to \fItoken\fR\&.  If
\fB-chan\fR is provided, write the message to \fIchannel\fR and return the
empty string\&.  Pauses the current coroutine as needed to wait for input to
become available\&.
.TP
\fB::mime::parseaddress\fR \fIaddresses\fR
Returns a list of describing the comma-separated 822-style \fIaddresses\fR\&.
.sp
Each dictionary contains the following keys, whose values may be the empty
string:
.RS
.TP
\fBaddress\fR
local@domain
.TP
\fBcomment\fR
822-style comment
.TP
\fBdomain\fR
the domain part (rhs)
.TP
\fBerror\fR
non-empty on a parse error
.TP
\fBgroup\fR
this address begins a group
.TP
\fBfriendly\fR
user-friendly rendering
.TP
\fBlocal\fR
the local part (lhs)
.TP
\fBmemberP\fR
this address belongs to a group
.TP
\fBphrase\fR
the phrase part
.TP
\fBproper\fR
822-style address specification
.TP
\fBroute\fR
822-style route specification (obsolete)
.RE
.TP
\fB::mime::mapencoding\fR \fIencoding_name\fR
Maps Tcl encodings onto the proper names for their MIME
charset type\&.  This is only done for encodings whose charset types
were known\&.  The remaining encodings return "" for now\&.
.TP
\fB::mime::reversemapencoding\fR \fIcharset_type\fR
Maps MIME charset types onto tcl encoding names\&.  Those
that are unknown return ""\&.
.PP
.SH "KNOWN BUGS"
.TP
Tcllib Bug #447037
This problem affects only people which are using Tcl and Mime on a
64-bit system\&. The currently recommended fix for this problem is to
upgrade to Tcl version 8\&.4\&. This version has extended 64 bit support
and the bug does not appear anymore\&.
.sp
The problem could have been generally solved by requiring the use of
Tcl 8\&.4 for this package\&. We decided against this solution as it would
force a large number of unaffected users to upgrade their Tcl
interpreter for no reason\&.
.sp
See \fITicket 447037\fR [/tktview?name=447037] for additional information\&.
.PP
.SH "BUGS, IDEAS, FEEDBACK"
This document, and the package it describes, will undoubtedly contain
bugs and other problems\&.
Please report such in the category \fImime\fR of the
\fITcllib Trackers\fR [http://core\&.tcl\&.tk/tcllib/reportlist]\&.
Please also report any ideas for enhancements you may have for either
package and/or documentation\&.
.PP
When proposing code changes, please provide \fIunified diffs\fR,
i\&.e the output of \fBdiff -u\fR\&.
.PP
Note further that \fIattachments\fR are strongly preferred over
inlined patches\&. Attachments can be made by going to the \fBEdit\fR
form of the ticket immediately after its creation, and then using the
left-most button in the secondary navigation bar\&.
.SH "SEE ALSO"
ftp, http, pop3, smtp
.SH KEYWORDS
email, internet, mail, mime, net, rfc 2045, rfc 2046, rfc 2049, rfc 821, rfc 822, smtp
.SH CATEGORY
Text processing
.SH COPYRIGHT
.nf
Copyright (c) 1999-2000 Marshall T\&. Rose

.fi